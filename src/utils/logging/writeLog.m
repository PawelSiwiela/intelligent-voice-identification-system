function writeLog(level, message, varargin)
% WRITELOG Zapisuje komunikat do pliku logu i wy≈õwietla go w konsoli
%
% Sk≈Çadnia:
%   writeLog(level, message, varargin)
%
% Argumenty:
%   level - poziom komunikatu (DEBUG, INFO, WARNING, ERROR, SUCCESS)
%   message - tre≈õƒá komunikatu (mo≈ºe zawieraƒá formatowanie jak w printf)
%   varargin - opcjonalne parametry do formatowania wiadomo≈õci

% Inicjalizacja globalnej zmiennej przechowujƒÖcej uchwyt do pliku logu
global LOG_FILE_HANDLE;

% Formatowanie wiadomo≈õci z opcjonalnymi parametrami
if ~isempty(varargin)
    message = sprintf(message, varargin{:});
end

% Przygotowanie znacznika czasu
timestamp = datestr(now, 'yyyy-mm-dd HH:MM:SS');

% Wyb√≥r ikony na podstawie poziomu
switch level
    case 'DEBUG'
        icon = 'üîç';
    case 'INFO'
        icon = '‚ÑπÔ∏è';
    case 'WARNING'
        icon = '‚ö†Ô∏è';
    case 'ERROR'
        icon = '‚ùå';
    case 'SUCCESS'
        icon = '‚úÖ';
    otherwise
        icon = '';
end

% Pe≈Çny komunikat z datƒÖ i poziomem
full_message = sprintf('%s [%s] %s %s', timestamp, level, icon, message);

% Wy≈õwietl komunikat w konsoli MATLAB
fprintf('%s\n', full_message);

% Je≈õli uchwyt do pliku nie istnieje, spr√≥buj go utworzyƒá
if isempty(LOG_FILE_HANDLE) || LOG_FILE_HANDLE == -1
    try
        % Utw√≥rz folder output/logs w g≈Ç√≥wnym katalogu projektu, je≈õli nie istnieje
        log_dir = fullfile('output', 'logs');
        if ~exist(log_dir, 'dir')
            mkdir(log_dir);
        end
        
        % Przygotuj nazwƒô pliku logu na podstawie daty
        log_filename = fullfile(log_dir, sprintf('log_%s.txt', datestr(now, 'yyyymmdd_HHMMSS')));
        
        % Otw√≥rz plik do zapisu (append)
        LOG_FILE_HANDLE = fopen(log_filename, 'a');
        
        % Je≈õli to nowy plik, dodaj nag≈Ç√≥wek
        if LOG_FILE_HANDLE ~= -1 && ftell(LOG_FILE_HANDLE) == 0
            fprintf(LOG_FILE_HANDLE, '========================================\n');
            fprintf(LOG_FILE_HANDLE, 'INTELLIGENT VOICE IDENTIFICATION SYSTEM\n');
            fprintf(LOG_FILE_HANDLE, 'Log rozpoczƒôty: %s\n', datestr(now));
            fprintf(LOG_FILE_HANDLE, '========================================\n\n');
        end
    catch
        % W przypadku b≈Çƒôdu, ustaw pusty uchwyt
        LOG_FILE_HANDLE = -1;
        fprintf('‚ùå Nie mo≈ºna otworzyƒá pliku logu!\n');
    end
end

% Zapisz komunikat do pliku, je≈õli jest otwarty
if LOG_FILE_HANDLE ~= -1
    try
        fprintf(LOG_FILE_HANDLE, '%s\n', full_message);
    catch
        LOG_FILE_HANDLE = -1;
        fprintf('‚ùå B≈ÇƒÖd podczas zapisu do pliku logu!\n');
    end
end

end